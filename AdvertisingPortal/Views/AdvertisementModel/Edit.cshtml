@model AdvertisingPortal.Models.AdvertisementCreate

@{
    ViewBag.Title = "Edycja ogłoszenia - " + Model.Ad.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("Edit", "AdvertisementModel", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Edycja ogłoszenia</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Ad.ID)

    <div style="float: left">
        <div class="form-group">
            <label>Kategoria</label>
            @Html.DropDownListFor(model => model.Ad.Category.ID, (IEnumerable<SelectListItem>)ViewBag.categories, "Wybierz kategorię", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Ad.Category.ID, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <label>Tytuł</label>
            @Html.EditorFor(model => model.Ad.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Ad.Title, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <label>Cena</label>
            @Html.EditorFor(model => model.Ad.Price, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "0", @step = "0.01", @value = "0" } })
            @Html.ValidationMessageFor(model => model.Ad.Price, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <div class="checkbox">
                @Html.CheckBoxFor(model => model.Ad.ToNegotiate)
                <label>do negocjacji</label>
                @Html.ValidationMessageFor(model => model.Ad.ToNegotiate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" style="width: 325px">
            <Label>Obraz</Label>
            @{ Html.EnableClientValidation(false); }
            @Html.TextBoxFor(model => model.AttachImage, "", new { type = "file" })
            <div>@Html.ValidationMessageFor(model => model.AttachImage, "", new { @class = "text-danger" })</div>
            @{ Html.EnableClientValidation(true); }
        </div>
    </div>
    <div style="float:left;">
        <div class="form-group">
            <label>Treść</label>
            <textarea class="form-control" data-val="true" style="width:785px; max-width: 785px; height: 300px;" data-val-required="Pole treść jest wymagane." htmlattributes="{ class = md-textarea form-control }" id="Ad_Content" name="Ad.Content">@Html.DisplayFor(i => Model.Ad.Content)</textarea>
            @Html.ValidationMessageFor(model => model.Ad.Content, "", new { @class = "text-danger" })
        </div>
    </div>
    <div style="clear:both"></div>
    <div class="form-group">
        <p align="right"><input type="submit" value="Zapisz" class="btn btn-primary" /></p>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
